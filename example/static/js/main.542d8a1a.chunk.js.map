{"version":3,"sources":["img/lunatic-logo.png","orchestrator/orchestrator.js","orchestrator/collect.js","orchestrator/management.js","home.js","index.js"],"names":["module","exports","__webpack_require__","p","mergeSimpleComponentAndData","component","data","response","other","Object","objectWithoutProperties","name","newValueState","valueState","map","_ref","valueType","value","undefined","objectSpread","mergeCheckboxGroupAndData","responses","newResponses","c","mergeTableAndData","cells","newCells","reduce","_","line","newLine","concat","toConsumableArray","updateComponent","preferences","componentType","isComponentsConcernedByResponse","buildUpdatedResponse","buildUpdatedCheckboxGroupResponse","buildUpdatedTableResponse","newValue","includes","slice","indexOf","type","find","v","__","buildUpdatedVectorResponse","cellComponent","push","responseName","filter","o","length","forEach","l","str","Orchestrator","_ref2","savingType","source","tooltip","_useState","useState","questionnaire","components","props","filledComponents","mergeQuestionnaireAndData","_useState2","slicedToArray","setQuestionnaire","onChange","updatedValue","_Object$entries$","entries","updateQuestionnaire","console","log","lunatic","q","id","Component","react_default","a","createElement","className","key","assign","handleChange","labelPosition","Collect","orchestrator","simpsons","Management","Home","fakeRoute","setFakeRoute","Fragment","alt","src","logo","onClick","collect","management","ReactDOM","render","home","document","getElementById"],"mappings":"4kwCAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,ouFCiBlCC,EAA8B,SAAAC,GAAS,OAAI,SAAAC,GAAQ,IAChDC,EAAuBF,EAAvBE,SAAaC,EADmCC,OAAAC,EAAA,EAAAD,CACzBJ,EADyB,cAEhDM,EAAqBJ,EAArBI,KACFC,EADuBL,EAAfM,WACmBC,IAAI,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,MAKlD,MAAO,CAAED,YAAWC,WAHJC,IAAfZ,EAAKK,SAAiDO,IAA1BZ,EAAKK,GAAMK,GACpCV,EAAKK,GAAMK,GACXC,KAGL,OAAOR,OAAAU,EAAA,EAAAV,CAAA,GAAKD,EAAZ,CAAmBD,SAAU,CAAEI,OAAME,WAAYD,OAG5CQ,EAA4B,SAAAf,GAAS,OAAI,SAAAC,GAAQ,IAC9Ce,EAAwBhB,EAAxBgB,UAAcb,EADgCC,OAAAC,EAAA,EAAAD,CACtBJ,EADsB,eAEhDiB,EAAeD,EAAUP,IAAI,SAAAS,GAAC,OAAInB,EAA4BmB,EAA5BnB,CAA+BE,KACvE,OAAOG,OAAAU,EAAA,EAAAV,CAAA,GAAKD,EAAZ,CAAmBa,UAAWC,MAGzBE,EAAoB,SAAAnB,GAAS,OAAI,SAAAC,GAAQ,IACtCmB,EAAoBpB,EAApBoB,MAAUjB,EAD4BC,OAAAC,EAAA,EAAAD,CAClBJ,EADkB,WAExCqB,EAAWD,EAAME,OAAO,SAACC,EAAGC,GACjC,IAAMC,EAAUD,EAAKf,IAAI,SAAAT,GAAS,OACjCA,EAAUE,SACPH,EAA4BC,EAA5BD,CAAuCE,GACvCD,IAEJ,SAAA0B,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAWmB,GAAX,CAAcE,KACZ,IACH,OAAOrB,OAAAU,EAAA,EAAAV,CAAA,GAAKD,EAAZ,CAAmBiB,MAAOC,MAGrBO,EAAkB,SAAAjB,GAAS,OAAI,SAAAX,GAAS,OAAI,SAAA6B,GAAW,OAAI,SAAAvB,GAAI,OAAI,SAAAM,GAAS,IACzEV,EAA4BF,EAA5BE,SAAU4B,EAAkB9B,EAAlB8B,cAClB,OAAKC,EAAgCzB,EAAhCyB,CAAsC/B,GAEhCE,EACH8B,EAAqBhC,EAArBgC,CAAgCH,EAAhCG,CAA6CrB,EAA7CqB,CAAwDpB,GACnC,kBAAlBkB,EACHG,EAAkCjC,EAAlCiC,CAA6CJ,EAA7CI,CAA0DtB,EAA1DsB,CACNrB,EADMqB,CAEL3B,GACwB,UAAlBwB,EACDI,EAA0BlC,EAA1BkC,CAAqCL,EAArCK,CAAkDvB,EAAlDuB,CAA6DtB,EAA7DsB,CACN5B,GAEUN,EAXJA,OAuBHgC,EAAuB,SAAAhC,GAAS,OAAI,SAAA6B,GAAW,OAAI,SAAAlB,GAAS,OAAI,SAAAC,GACrE,IAAIuB,EAAWvB,EACXiB,EAAYO,SAASzB,KAQpBC,IAPYiB,EAAYQ,MAAM,EAAGR,EAAYS,QAAQ3B,IAC/BW,OACzB,SAACC,EAAGgB,GAAJ,OACCvC,EAAUE,SAASM,WAAWgC,KAAK,SAAAC,GAAC,OAAIA,EAAE9B,YAAc4B,IAAM3B,OAC9DW,GACD,MAEwBY,EAAW,OAErC,OAAO/B,OAAAU,EAAA,EAAAV,CAAA,GACHJ,EADJ,CAECE,SAASE,OAAAU,EAAA,EAAAV,CAAA,GACLJ,EAAUE,SADN,CAEPM,WAAYR,EAAUE,SAASM,WAAWc,OAAO,SAACoB,EAAID,GACrD,OAAIA,EAAE9B,YAAcA,EACnB,GAAAe,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAWsC,GAAX,CAAAtC,OAAAU,EAAA,EAAAV,CAAA,GAAoBqC,EAApB,CAAuB7B,MAAOuB,MAC/B,GAAAT,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAWsC,GAAX,CAAeD,KACb,YAKAE,EAA6B,SAAA3B,GAAS,OAAI,SAAAa,GAAW,OAAI,SAAAlB,GAAS,OAAI,SAAAC,GAAK,OAAI,SAAAN,GAAI,OACxFU,EAAUM,OAAO,SAACC,EAAGqB,GAMpB,OALIb,EAAgCzB,EAAhCyB,CAAsCa,GACzCrB,EAAEsB,KACDb,EAAqBY,EAArBZ,CAAoCH,EAApCG,CAAiDrB,EAAjDqB,CAA4DpB,IAEzDW,EAAEsB,KAAKD,GACLrB,GACL,SAEEU,EAAoC,SAAAjC,GAAS,OAAI,SAAA6B,GAAW,OAAI,SAAAlB,GAAS,OAAI,SAAAC,GAAK,OAAI,SAAAN,GAAQ,IAC3FU,EAAwBhB,EAAxBgB,UAAcb,EAD6EC,OAAAC,EAAA,EAAAD,CACnEJ,EADmE,eAE7FiB,EAAe0B,EAA2B3B,EAA3B2B,CAAsCd,EAAtCc,CACpBhC,EADoBgC,CAEnB/B,EAFmB+B,CAEZrC,GACT,OAAOF,OAAAU,EAAA,EAAAV,CAAA,GAAKD,EAAZ,CAAmBa,UAAWC,SAGzBiB,EAA4B,SAAAlC,GAAS,OAAI,SAAA6B,GAAW,OAAI,SAAAlB,GAAS,OAAI,SAAAC,GAAK,OAAI,SAAAN,GAAQ,IACnFc,EAAoBpB,EAApBoB,MAAUjB,EADyEC,OAAAC,EAAA,EAAAD,CAC/DJ,EAD+D,WAErFqB,EAAWD,EAAME,OAAO,SAACC,EAAGC,GAIjC,OAHAD,EAAEsB,KACDF,EAA2BnB,EAA3BmB,CAAiCd,EAAjCc,CAA8ChC,EAA9CgC,CAAyD/B,EAAzD+B,CAAgErC,IAE1DiB,GACL,IACH,OAAOnB,OAAAU,EAAA,EAAAV,CAAA,GAAKD,EAAZ,CAAmBiB,MAAOC,SAGrBU,EAAkC,SAAAe,GAAY,OAAI,SAAA9C,GAAS,OAC/DA,EAAUE,UAAYF,EAAUE,SAASI,OAASwC,GAClD9C,EAAUgB,WAGG,IAFbhB,EAAUgB,UAAU+B,OACnB,SAAAC,GAAC,OAAIA,EAAE9C,UAAY8C,EAAE9C,SAASI,OAASwC,IACtCG,QACFjD,EAAUoB,OAQuC,IAPjDpB,EAAUoB,MACRE,OAAO,SAACC,EAAGC,GAIX,OAHAA,EAAK0B,QAAQ,SAAAC,GACRA,EAAEjD,UAAYiD,EAAEjD,SAASI,MAAMiB,EAAEsB,KAAKM,EAAEjD,SAASI,QAE/CiB,GACL,IACFwB,OAAO,SAAAK,GAAG,OAAIA,IAAQN,IAAcG,SAkCzBI,EAhCM,SAAAC,GAAwD,IAArDC,EAAqDD,EAArDC,WAAY1B,EAAyCyB,EAAzCzB,YAAa2B,EAA4BF,EAA5BE,OAAQvD,EAAoBqD,EAApBrD,KAAMwD,EAAcH,EAAdG,QAAcC,EAClCC,mBA/IT,SAAAC,GAAa,OAAI,SAAA3D,GAAQ,IAClD4D,EAAyBD,EAAzBC,WAAeC,EADmC1D,OAAAC,EAAA,EAAAD,CACzBwD,EADyB,gBAEpDG,EAAmBF,EAAWvC,OAAO,SAACC,EAAGvB,GAAc,IACpDE,EAA4BF,EAA5BE,SAAU4B,EAAkB9B,EAAlB8B,cAClB,MAAc,GAAAJ,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAWmB,GAArBrB,EAAU,CAAcH,EAA4BC,EAA5BD,CAAuCE,IACxC,kBAAlB6B,EACR,CAAcf,EAA0Bf,EAA1Be,CAAqCd,IACzB,UAAlB6B,EACR,CAAcX,EAAkBnB,EAAlBmB,CAA6BlB,IACvC,CAAcD,KACjB,IACH,OAAOI,OAAAU,EAAA,EAAAV,CAAA,GAAK0D,EAAZ,CAAmBD,WAAYE,KAqI9BC,CAA0BR,EAA1BQ,CAAkC/D,IAFyCgE,EAAA7D,OAAA8D,EAAA,EAAA9D,CAAAsD,EAAA,GACrEE,EADqEK,EAAA,GACtDE,EADsDF,EAAA,GAItEG,EAAW,SAAAC,GAnFU,IAAA1D,EAoF1BwD,GApF0BxD,EAqFL4C,EArFkB,SAAAK,GAAa,OAAI,SAAA/B,GAAW,OAAI,SAAAwC,GAAgB,IAAAC,EAAAlE,OAAA8D,EAAA,EAAA9D,CAClEA,OAAOmE,QAAQF,GAAc,GADqC,GACjF/D,EADiFgE,EAAA,GAC3E1D,EAD2E0D,EAAA,GAElFT,EAAaD,EAAcC,WAAWvC,OAC3C,SAACC,EAAGL,GAAJ,SAAAQ,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAcmB,GAAd,CAAiBK,EAAgBjB,EAAhBiB,CAA2BV,EAA3BU,CAA8BC,EAA9BD,CAA2CtB,EAA3CsB,CAAiDhB,MAClE,IAED,OAAOR,OAAAU,EAAA,EAAAV,CAAA,GAAKwD,EAAZ,CAA2BC,mBA+EOD,EAAhCY,CAA+C3C,EAA/C2C,CAA4DH,KAG9DI,QAAQC,IAAIC,WAAiBf,IAC7B,IAAMC,EAAaD,EAAcC,WAAWpD,IAAI,SAAAmE,GAAK,IAC5CC,EAAsBD,EAAtBC,GAAI/C,EAAkB8C,EAAlB9C,cACNgD,EAAYH,EAAQ7C,GAC1B,OACCiD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BC,IAAG,aAAAzD,OAAemD,IAC5DE,EAAAC,EAAAC,cAACH,EAAD1E,OAAAgF,OAAA,GACKR,EADL,CAECS,aAAcjB,EACdkB,cAAc,MACdzD,YAAaA,EACb4B,QAASA,QAKb,OACCsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcrB,YC9JjB0B,EAVC,kBACfR,EAAAC,EAAAC,cAACO,EAAD,CACCjC,WAAY,YACZ1B,YAAa,CAAC,aACd2B,OAAQiC,EACRxF,KAAM,GACNwD,SAAS,aCKIiC,EAVI,kBAClBX,EAAAC,EAAAC,cAACO,EAAD,CACCjC,WAAY,SACZ1B,YAAa,CAAC,YAAa,SAAU,UACrC2B,OAAQiC,EACRxF,KAAMA,EACNwD,SAAS,KCmBIkC,SAzBF,WAAM,IAAAjC,EACgBC,mBAAS,YADzBM,EAAA7D,OAAA8D,EAAA,EAAA9D,CAAAsD,EAAA,GACXkC,EADW3B,EAAA,GACA4B,EADA5B,EAAA,GAElB,OACCc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,OACCC,UAAU,cACVa,IAAI,UACJC,IAAKC,IACLC,QAAS,kBAELL,EADW,aAAdD,EACgB,cACA,gBAIJ,aAAdA,EACAb,EAAAC,EAAAC,cAACkB,EAAD,MAEApB,EAAAC,EAAAC,cAACmB,EAAD,eCnBJC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.542d8a1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lunatic-logo.f2d2cbf3.png\";","import React, { useState } from 'react';\nimport * as lunatic from '@inseefr/lunatic';\n\nconst mergeQuestionnaireAndData = questionnaire => data => {\n\tconst { components, ...props } = questionnaire;\n\tconst filledComponents = components.reduce((_, component) => {\n\t\tconst { response, componentType } = component;\n\t\tif (response) return [..._, mergeSimpleComponentAndData(component)(data)];\n\t\telse if (componentType === 'CheckboxGroup')\n\t\t\treturn [..._, mergeCheckboxGroupAndData(component)(data)];\n\t\telse if (componentType === 'Table')\n\t\t\treturn [..._, mergeTableAndData(component)(data)];\n\t\telse return [..._, component];\n\t}, []);\n\treturn { ...props, components: filledComponents };\n};\n\nconst mergeSimpleComponentAndData = component => data => {\n\tconst { response, ...other } = component;\n\tconst { name, valueState } = response;\n\tconst newValueState = valueState.map(({ valueType, value }) => {\n\t\tconst newValue =\n\t\t\tdata[name] !== undefined && data[name][valueType] !== undefined\n\t\t\t\t? data[name][valueType]\n\t\t\t\t: value;\n\t\treturn { valueType, value: newValue };\n\t});\n\treturn { ...other, response: { name, valueState: newValueState } };\n};\n\nconst mergeCheckboxGroupAndData = component => data => {\n\tconst { responses, ...other } = component;\n\tconst newResponses = responses.map(c => mergeSimpleComponentAndData(c)(data));\n\treturn { ...other, responses: newResponses };\n};\n\nconst mergeTableAndData = component => data => {\n\tconst { cells, ...other } = component;\n\tconst newCells = cells.reduce((_, line) => {\n\t\tconst newLine = line.map(component =>\n\t\t\tcomponent.response\n\t\t\t\t? mergeSimpleComponentAndData(component)(data)\n\t\t\t\t: component\n\t\t);\n\t\treturn [..._, newLine];\n\t}, []);\n\treturn { ...other, cells: newCells };\n};\n\nconst updateComponent = valueType => component => preferences => name => value => {\n\tconst { response, componentType } = component;\n\tif (!isComponentsConcernedByResponse(name)(component)) {\n\t\treturn component;\n\t} else if (response) {\n\t\treturn buildUpdatedResponse(component)(preferences)(valueType)(value);\n\t} else if (componentType === 'CheckboxGroup')\n\t\treturn buildUpdatedCheckboxGroupResponse(component)(preferences)(valueType)(\n\t\t\tvalue\n\t\t)(name);\n\telse if (componentType === 'Table')\n\t\treturn buildUpdatedTableResponse(component)(preferences)(valueType)(value)(\n\t\t\tname\n\t\t);\n\telse return component;\n};\n\nconst updateQuestionnaire = valueType => questionnaire => preferences => updatedValue => {\n\tconst [name, value] = Object.entries(updatedValue)[0];\n\tconst components = questionnaire.components.reduce(\n\t\t(_, c) => [..._, updateComponent(valueType)(c)(preferences)(name)(value)],\n\t\t[]\n\t);\n\treturn { ...questionnaire, components };\n};\n\nconst buildUpdatedResponse = component => preferences => valueType => value => {\n\tlet newValue = value;\n\tif (preferences.includes(valueType)) {\n\t\tconst toCheck = preferences.slice(0, preferences.indexOf(valueType));\n\t\tconst lastValue = toCheck.reduce(\n\t\t\t(_, type) =>\n\t\t\t\tcomponent.response.valueState.find(v => v.valueType === type).value ||\n\t\t\t\t_,\n\t\t\t''\n\t\t);\n\t\tif (value === lastValue) newValue = null;\n\t}\n\treturn {\n\t\t...component,\n\t\tresponse: {\n\t\t\t...component.response,\n\t\t\tvalueState: component.response.valueState.reduce((__, v) => {\n\t\t\t\tif (v.valueType === valueType)\n\t\t\t\t\treturn [...__, { ...v, value: newValue }];\n\t\t\t\treturn [...__, v];\n\t\t\t}, []),\n\t\t},\n\t};\n};\n\nconst buildUpdatedVectorResponse = responses => preferences => valueType => value => name =>\n\tresponses.reduce((_, cellComponent) => {\n\t\tif (isComponentsConcernedByResponse(name)(cellComponent))\n\t\t\t_.push(\n\t\t\t\tbuildUpdatedResponse(cellComponent)(preferences)(valueType)(value)\n\t\t\t);\n\t\telse _.push(cellComponent);\n\t\treturn _;\n\t}, []);\n\nconst buildUpdatedCheckboxGroupResponse = component => preferences => valueType => value => name => {\n\tconst { responses, ...other } = component;\n\tconst newResponses = buildUpdatedVectorResponse(responses)(preferences)(\n\t\tvalueType\n\t)(value)(name);\n\treturn { ...other, responses: newResponses };\n};\n\nconst buildUpdatedTableResponse = component => preferences => valueType => value => name => {\n\tconst { cells, ...other } = component;\n\tconst newCells = cells.reduce((_, line) => {\n\t\t_.push(\n\t\t\tbuildUpdatedVectorResponse(line)(preferences)(valueType)(value)(name)\n\t\t);\n\t\treturn _;\n\t}, []);\n\treturn { ...other, cells: newCells };\n};\n\nconst isComponentsConcernedByResponse = responseName => component =>\n\t(component.response && component.response.name === responseName) ||\n\t(component.responses &&\n\t\tcomponent.responses.filter(\n\t\t\to => o.response && o.response.name === responseName\n\t\t).length !== 0) ||\n\t(component.cells &&\n\t\tcomponent.cells\n\t\t\t.reduce((_, line) => {\n\t\t\t\tline.forEach(l => {\n\t\t\t\t\tif (l.response && l.response.name) _.push(l.response.name);\n\t\t\t\t});\n\t\t\t\treturn _;\n\t\t\t}, [])\n\t\t\t.filter(str => str === responseName).length === 1);\n\nconst Orchestrator = ({ savingType, preferences, source, data, tooltip }) => {\n\tconst [questionnaire, setQuestionnaire] = useState(\n\t\tmergeQuestionnaireAndData(source)(data)\n\t);\n\tconst onChange = updatedValue => {\n\t\tsetQuestionnaire(\n\t\t\tupdateQuestionnaire(savingType)(questionnaire)(preferences)(updatedValue)\n\t\t);\n\t};\n\tconsole.log(lunatic.getState(questionnaire));\n\tconst components = questionnaire.components.map(q => {\n\t\tconst { id, componentType } = q;\n\t\tconst Component = lunatic[componentType];\n\t\treturn (\n\t\t\t<div className=\"lunatic lunatic-component\" key={`component-${id}`}>\n\t\t\t\t<Component\n\t\t\t\t\t{...q}\n\t\t\t\t\thandleChange={onChange}\n\t\t\t\t\tlabelPosition=\"TOP\"\n\t\t\t\t\tpreferences={preferences}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t});\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"components\">{components}</div>\n\t\t</div>\n\t);\n};\n\nexport default Orchestrator;\n","import React from 'react';\nimport Orchestrator from './orchestrator';\nimport simpsons from './simpsons';\n\nconst Collect = () => (\n\t<Orchestrator\n\t\tsavingType={'COLLECTED'}\n\t\tpreferences={['COLLECTED']}\n\t\tsource={simpsons}\n\t\tdata={{}}\n\t\ttooltip={false}\n\t/>\n);\n\nexport default Collect;\n","import React from 'react';\nimport Orchestrator from './orchestrator';\nimport simpsons from './simpsons';\nimport data from './data';\n\nconst Management = () => (\n\t<Orchestrator\n\t\tsavingType={'EDITED'}\n\t\tpreferences={['COLLECTED', 'FORCED', 'EDITED']}\n\t\tsource={simpsons}\n\t\tdata={data}\n\t\ttooltip={true}\n\t/>\n);\n\nexport default Management;\n","import React, { useState } from 'react';\nimport logo from './img/lunatic-logo.png';\nimport { CollectOrchestrator, ManagementOrchestrator } from './orchestrator';\nimport './custom-lunatic.scss';\n\nconst Home = () => {\n\tconst [fakeRoute, setFakeRoute] = useState('/collect');\n\treturn (\n\t\t<>\n\t\t\t<div className=\"lunatic-img-container\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"lunatic-img\"\n\t\t\t\t\talt=\"lunatic\"\n\t\t\t\t\tsrc={logo}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tfakeRoute === '/collect'\n\t\t\t\t\t\t\t? setFakeRoute('/management')\n\t\t\t\t\t\t\t: setFakeRoute('/collect')\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{fakeRoute === '/collect' ? (\n\t\t\t\t<CollectOrchestrator />\n\t\t\t) : (\n\t\t\t\t<ManagementOrchestrator />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './home';\nimport './index.scss';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}