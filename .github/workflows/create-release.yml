name: Create release

on:
  push:
    branches:
      - main

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Print version
        run: echo ${{ steps.version.outputs.version }}
      - uses: mukunku/tag-exists-action@v1.2.0
        name: Check tag existence
        id: check-tag-exists
        with:
          tag: ${{ steps.version.outputs.version }}

      - if: ${{ steps.check-tag-exists.outputs.exists == 'false' }}
        name: Check tag format
        id: check-tag-format
        run: |
          if ! [[ "${{ steps.version.outputs.version }}" =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]; then
            echo "is-tag-format-correct=false" >> $GITHUB_OUTPUT
          fi
      - name: Tag verification
        id: check-tag
        run: |
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version.outputs.version }} already exists"
            exit 1
          fi
          if ! [[ "${{ steps.version.outputs.version }}" =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version.outputs.version }} is not in correct format X.Y.Z"
            exit 1
          fi
  create-release:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Get previous final release tag
        id: previousTag
        run: |
          previousTag=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$" | tail -1)
          if [ -z "$previousTag" ]; then
            echo "previousTag=$(git rev-list --max-parents=0 HEAD)" >> $GITHUB_OUTPUT
          else
            echo "previousTag=$previousTag" >> $GITHUB_OUTPUT
          fi
      - name: Create release note
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          fromTag: ${{ github.sha }}
          toTag: ${{ steps.previousTag.outputs.previousTag}}
          token: ${{ secrets.GITHUB_TOKEN }}
          writeToFile: false
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-version.outputs.release-version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          name: ${{ needs.check-version.outputs.release-version }}
          body: ${{steps.changelog.outputs.changes}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
