name: Lunatic CI (prisme, master)

on: [push]

jobs:
  test-build:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: yarn
      # Check TypeScript
      - run: yarn run check
      # Run tests & build sonar reports
      - run: yarn test-coverage
      # Build lib
      - run: yarn build
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  check_if_version_upgraded:
    name: Check if version upgrade
    if: github.event_name == 'push' && contains('refs/heads/master refs/heads/v2-master refs/heads/prisme', github.ref)
    runs-on: ubuntu-latest
    needs: test-build
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{steps.step1.outputs.is_upgraded_version }}
    steps:
      - uses: garronej/github_actions_toolkit@v2.2
        id: step1
        with:
          action_name: is_package_json_version_upgraded

  publish_on_npm:
    runs-on: ubuntu-latest
    needs:
      - check_if_version_upgraded
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/
      - uses: bahmutov/npm-install@v1
      - run: |
          yarn build
      - name: Publishing on NPM
        run: |
          if [ "$(npm show . version)" = "$VERSION" ]; then
            echo "This version is already published"
            exit 0
          fi
          if [ "$NODE_AUTH_TOKEN" = "" ]; then
            echo "Can't publish on NPM, You must first create a secret called NPM_TOKEN that contains your NPM auth token. https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets"
            false
          fi
          if [ ${{github.ref}} = 'refs/heads/master' ]; then
            yarn publish --access public
          fi
          if [ ${{github.ref}} = 'refs/heads/v2-master' ]; then
            yarn publish --tag v2 --access public
          fi
          if [ ${{github.ref}} = 'refs/heads/prisme' ]; then
            yarn publish --tag prisme --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}

  build-assets:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 15
      - uses: bahmutov/npm-install@v1
      - run: yarn
      # Build Storybook
      - run: yarn build-storybook
      - run: mkdir -p deploy/storybook
      - run: cp -R ./storybook-static/storybook/. ./deploy/storybook
      - uses: actions/setup-node@v3
        with:
          # Because of gitbook support
          node-version: 10
      - run: |
          npm i -g gitbook-cli
          gitbook install
          gitbook build
        working-directory: ./docs/
      - run: cp -a ./docs/_book/. ./deploy/
      # Build orchestrator example
      - run: yarn
        working-directory: ./example/orchestrator
      - run: yarn build
        working-directory: ./example/orchestrator
      - run: mkdir -p deploy/orchestrator
      - run: cp -a ./example/orchestrator/build/. ./deploy/orchestrator
      # Build editor example
      - run: yarn
        working-directory: ./example/lunatic-editor
      - run: yarn build
        working-directory: ./example/lunatic-editor
      - run: mkdir -p deploy/editor
      - run: cp -a ./example/lunatic-editor/build/. ./deploy/editor
      # Add json to fetch for suggester stories
      - run: cp -a ./public/. ./deploy/storybook
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: deploy/

  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build-assets
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Download deploy artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          author_name: 'Github action'
          message: 'Update master assets'
          branch: 'gh-pages'

  build-assets-v2:
    if: github.ref == 'refs/heads/v2-master'
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v2-master
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: yarn
      # Build Storybook v2
      - run: yarn build-storybook
      - run: mkdir -p deploy-v2/storybook-v2
      - run: cp -R ./storybook-static/. ./deploy-v2/storybook-v2
      # Add json to fetch for suggester stories
      - run: cp -a ./public/. ./deploy-v2/storybook-v2
      #
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-v2
          path: deploy-v2/

  deploy-v2:
    if: github.ref == 'refs/heads/v2-master'
    runs-on: ubuntu-latest
    needs: build-assets-v2
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Download deploy artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy-v2
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          author_name: 'Github action'
          message: 'Update v2-master assets'
          branch: 'gh-pages'
