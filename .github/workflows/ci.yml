name: Lunatic CI

on: [push]

jobs:
  test-build:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - run: yarn
      # Run tests & build sonar reports
      - run: yarn test-coverage
      # Build lib
      - run: yarn build
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-assets:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/v2-master'
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - run: yarn
      # Build Storybook
      - run: yarn build-storybook
      - run: mkdir -p deploy/storybook
      - run: cp -R ./built-storybook/storybook/. ./deploy/storybook
      # Build bundle reports
      - run: yarn analyze
      - run: mkdir -p deploy/bundle-report
      - run: cp -a ./bundle-report/. ./deploy/bundle-report
      - uses: actions/setup-node@v1
        with:
          # Because of gitbook support
          node-version: 10
      - run: |
          npm i -g gitbook-cli
          gitbook install
          gitbook build
        working-directory: ./docs/
      - run: cp -a ./docs/_book/. ./deploy/
      # Build orchestrator example
      - run: yarn
        working-directory: ./example/orchestrator
      - run: yarn build
        working-directory: ./example/orchestrator
      - run: mkdir -p deploy/orchestrator
      - run: cp -a ./example/orchestrator/build/. ./deploy/orchestrator
      # Build editor example
      - run: yarn
        working-directory: ./example/lunatic-editor
      - run: yarn build
        working-directory: ./example/lunatic-editor
      - run: mkdir -p deploy/editor
      - run: cp -a ./example/lunatic-editor/build/. ./deploy/editor
      # Add json to fetch for suggester stories
      - run: cp -a ./public/. ./deploy/storybook
      # Deploy storybook v2
      - uses: actions/checkout@v3
        with:
          ref: v2-master
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - run: yarn
      # Build Storybook v2
      - run: yarn build-storybook
      - run: mkdir -p deploy/storybook
      - run: cp -R ./built-storybook/storybook/. ./deploy/storybook-v2
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: deploy/

  build-assets-v2:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/v2-master'
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v2-master
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - run: yarn
      # Build Storybook v2
      - run: yarn build-storybook
      - run: mkdir -p deploy/storybook
      - run: cp -R ./built-storybook/storybook/. ./deploy/storybook-v2
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v2
        with:
          name: deploy-v2
          path: deploy-v2/

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/v2-master'
    runs-on: ubuntu-latest
    needs: [build-assets, build-assets-v2]
    steps:
      - name: Download deploy artifact
        uses: actions/download-artifact@v2
        with:
          name: deploy
      - name: Download deploy-v2 artifact
        uses: actions/download-artifact@v2
        with:
          name: deploy-v2
      - run: cp -R ./deploy-v2/. ./deploy
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
