name: Publish stable to NPM

on:
  push:
    branches: ['main', 'v1-main', 'prisme']
    # CI only if package.json has changed
    paths: ['package.json']

jobs:
  test-build:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: bahmutov/npm-install@v1
      - run: yarn
      # Check TypeScript
      - run: yarn run check
      # Run tests & build sonar reports
      - run: yarn test-coverage
      # Build lib
      - run: yarn build
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish_on_npm:
    runs-on: ubuntu-latest
    needs:
      - test-build
    outputs:
      new_version: ${{ steps.publish.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: https://registry.npmjs.org/
      - uses: bahmutov/npm-install@v1
      - name: Get current package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'
      - run: |
          yarn build
      - name: Publishing on NPM
        id: publish
        run: |
          git config --global user.email "no-reply@insee.fr"
          git config --global user.name "Insee"

          case ${{github.ref}} in
            'refs/heads/main' )
              export TAG=latest
              export NEW_VERSION=${{steps.version.outputs.prop}} ;;
            'refs/heads/v1-main' )
              export TAG=v1
              export NEW_VERSION=${{steps.version.outputs.prop}}-$TAG ;;
            'refs/heads/prisme' )
              export TAG=prisme
              export NEW_VERSION=${{steps.version.outputs.prop}}-$TAG ;;
          esac

          if [ "$(npm show . dist-tags.$TAG)" = "$NEW_VERSION" ]; then
            echo "This version is already published"
            exit 1
          fi
          if [ "$NODE_AUTH_TOKEN" = "" ]; then
            echo "Can't publish on NPM, You must first create a secret called NPM_TOKEN that contains your NPM auth token. https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets"
            exit 1
          fi

          yarn publish --new-version $NEW_VERSION --tag $TAG --access public
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  build-assets-v1:
    if: github.ref == 'refs/heads/v1-main'
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: bahmutov/npm-install@v1
      - run: yarn
      # Build Storybook
      - run: yarn build-storybook
      - run: mkdir -p deploy-v1/storybook-v1
      - run: cp -R ./storybook-static/storybook/. ./deploy-v1/storybook-v1
      # Build orchestrator example
      - run: yarn
        working-directory: ./example/orchestrator
      - run: yarn build
        working-directory: ./example/orchestrator
      - run: mkdir -p deploy-v1/orchestrator-v1
      - run: cp -a ./example/orchestrator/build/. ./deploy-v1/orchestrator-v1
      # Build editor example
      - run: yarn
        working-directory: ./example/lunatic-editor
      - run: yarn build
        working-directory: ./example/lunatic-editor
      - run: mkdir -p deploy-v1/editor-v1
      - run: cp -a ./example/lunatic-editor/build/. ./deploy-v1/editor-v1
      # Add json to fetch for suggester stories
      - run: cp -a ./public/. ./deploy-v1/storybook-v1
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-v1
          path: deploy-v1/

  deploy-v1:
    if: github.ref == 'refs/heads/v1-main'
    runs-on: ubuntu-latest
    needs: build-assets-v1
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Download deploy artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy-v1
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          author_name: 'Github action'
          message: 'Update v1-main assets'
          branch: 'gh-pages'

  build-assets:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: bahmutov/npm-install@v1
      - run: yarn
      # Build Storybook v2
      - run: yarn build-storybook
      - run: mkdir -p deploy/storybook
      - run: cp -R ./storybook-static/. ./deploy/storybook
      # Add json to fetch for suggester stories
      - run: cp -a ./public/. ./deploy/storybook
      - uses: actions/setup-node@v3
        with:
          # Because of gitbook support
          node-version: 10
      - run: |
          npm i -g gitbook-cli
          gitbook install
          gitbook build
        working-directory: ./docs/
      - run: cp -a ./docs/_book/. ./deploy/
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: deploy/

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-assets
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Download deploy artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          author_name: 'Github action'
          message: 'Update main assets'
          branch: 'gh-pages'
