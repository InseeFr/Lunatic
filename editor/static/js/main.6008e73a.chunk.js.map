{"version":3,"sources":["components/left/jsoneditor/component.js","components/left/editor.js","components/right/orchestrator.js","components/home.js","index.js"],"names":["Editor","this","props","json","onChangeJSON","onChangeText","jsoneditor","JSONEditor","container","modes","set","hasToUp","setHasToUp","destroy","className","ref","elem","Component","handler","setError","context","useState","useEffect","onChange","type","up","JSON","parse","e","message","j","t","preferences","features","Questionnaire","source","data","error","lunatic","savingType","management","questionnaire","components","handleChange","bindings","Array","isArray","uiComponents","map","q","id","componentType","key","labelPosition","writable","zIndex","filterDesprition","label","defaultProps","Home","setContext","initD","setData","initQ","setQuestionnaire","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6008e73a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JSONEditor from 'jsoneditor';\nimport 'jsoneditor/dist/jsoneditor.css';\nimport './jsoneditor.scss';\n\nclass Editor extends Component {\n  componentDidMount() {\n    const { json, onChangeJSON, onChangeText } = this.props;\n    this.jsoneditor = new JSONEditor(this.container, {\n      modes: ['tree', 'text', 'view'],\n      onChangeJSON,\n      onChangeText,\n    });\n    this.jsoneditor.set(json);\n  }\n\n  componentDidUpdate() {\n    const { json, onChangeJSON, onChangeText, hasToUp, setHasToUp } = this.props;\n    if (hasToUp) {\n      this.jsoneditor.destroy();\n      this.jsoneditor = new JSONEditor(this.container, {\n        modes: ['tree', 'text', 'view'],\n        onChangeJSON,\n        onChangeText,\n      });\n      this.jsoneditor.set(json);\n      setHasToUp(false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.jsoneditor) {\n      this.jsoneditor.destroy();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className=\"jsoneditor-react-container\"\n        ref={elem => {\n          this.container = elem;\n        }}\n      />\n    );\n  }\n}\n\nexport default Editor;\n\nEditor.propTypes = {\n  json: PropTypes.shape({\n    label: PropTypes.string,\n    components: PropTypes.array,\n    variables: PropTypes.array,\n  }).isRequired,\n  onChangeJSON: PropTypes.func.isRequired,\n  onChangeText: PropTypes.func.isRequired,\n  hasToUp: PropTypes.bool.isRequired,\n  setHasToUp: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport JSONEditor from './jsoneditor/component';\n\nconst Editor = ({ json, handler, setError, context }) => {\n  const [hasToUp, setHasToUp] = useState(false);\n\n  useEffect(() => {\n    setHasToUp(true);\n  }, [context]);\n\n  const onChange = type => up => {\n    if (type === 'json') return handler(up);\n    try {\n      handler(JSON.parse(up));\n      setError('');\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n  return (\n    <JSONEditor\n      json={json}\n      onChangeJSON={j => onChange('json')(j)}\n      onChangeText={t => onChange('text')(t)}\n      hasToUp={hasToUp}\n      setHasToUp={setHasToUp}\n    />\n  );\n};\n\nexport default Editor;\n\nEditor.propTypes = {\n  json: PropTypes.shape({\n    label: PropTypes.string,\n    components: PropTypes.array,\n    variables: PropTypes.array,\n  }).isRequired,\n  handler: PropTypes.func.isRequired,\n  setError: PropTypes.func.isRequired,\n  context: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as lunatic from '@inseefr/lunatic';\nimport './custom-lunatic.scss';\n\nconst preferences = ['COLLECTED'];\nconst savingType = 'COLLECTED';\nconst management = false;\nconst features = ['VTL'];\n\nconst Questionnaire = ({ source, data, error }) => {\n  const { questionnaire, components, handleChange, bindings } = lunatic.useLunatic(source, data, {\n    savingType,\n    preferences,\n    features,\n    management,\n  });\n\n  if (error) return <h2 className=\"error\">{error}</h2>;\n  if (!Array.isArray(questionnaire.components))\n    return <h2 className=\"error\">Missing components</h2>;\n\n  const uiComponents = components.map((q) => {\n    const { id, componentType } = q;\n    const Component = lunatic[componentType];\n    if (!Component)\n      return <h4 key={`component-${id}`}>{`${id} component type is not supported`}</h4>;\n    return (\n      <div className=\"lunatic lunatic-component\" key={`component-${id}`}>\n        <Component\n          {...q}\n          handleChange={handleChange}\n          labelPosition=\"TOP\"\n          preferences={preferences}\n          features={features}\n          bindings={bindings}\n          writable\n          zIndex={1}\n          filterDesprition={false}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">{questionnaire.label}</h1>\n      <div className=\"components\">{uiComponents}</div>\n    </div>\n  );\n};\n\nexport default Questionnaire;\n\nQuestionnaire.defaultProps = {\n  data: {},\n  error: '',\n};\n\nQuestionnaire.propTypes = {\n  source: PropTypes.shape({\n    label: PropTypes.string,\n    components: PropTypes.array,\n    variables: PropTypes.array,\n  }).isRequired,\n  data: PropTypes.shape({\n    COLLECTED: PropTypes.objectOf(PropTypes.string),\n    CALCULATED: PropTypes.objectOf(PropTypes.string),\n    EXTERNAL: PropTypes.objectOf(PropTypes.string),\n  }),\n  error: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport { data as initD, questionnaire as initQ } from 'utils/default';\nimport Left from './left';\nimport Right from './right';\nimport './home.scss';\n\nconst Home = () => {\n  const [context, setContext] = useState('questionnaire');\n  const [data, setData] = useState(initD);\n  const [questionnaire, setQuestionnaire] = useState(initQ);\n  const [error, setError] = useState('');\n\n  const handler = context === 'questionnaire' ? setQuestionnaire : setData;\n  const json = context === 'questionnaire' ? questionnaire : data;\n\n  return (\n    <div className=\"container\">\n      <div>\n        <button type=\"button\" className=\"btn\" onClick={() => setContext('questionnaire')}>\n          Questionnaire\n        </button>\n        <button type=\"button\" className=\"btn\" onClick={() => setContext('data')}>\n          Data\n        </button>\n      </div>\n      <div className=\"panel-container\">\n        <div className=\"panel-left\">\n          <Left json={json} handler={handler} setError={setError} context={context} />\n        </div>\n        <div className=\"panel-right\">\n          <Right source={questionnaire} data={data} error={error} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from 'components/home';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}